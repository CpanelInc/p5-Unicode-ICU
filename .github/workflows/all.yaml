on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

env:
   PERL_USE_UNSAFE_INC: 0
   AUTHOR_TESTING: 1
   AUTOMATED_TESTING: 1
   RELEASE_TESTING: 1
   PERL_CARTON_PATH: $GITHUB_WORKSPACE/local

jobs:
  linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
          - '5.26'
          - '5.24'
          - '5.22'
          - '5.20'
          - '5.18'
          - '5.16'
          - '5.14'
          - '5.12'
          - '5.10'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v2
      - name: perl -V
        run: perl -V
      - name: Install ICU
        run: apt install -y libicu-dev
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  # CloudLinux 6
  linux-icu-4-2-1:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.34'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v2
      - run: apt remove -y libicu-dev
      - name: perl -V
        run: perl -V
      - name: Download ICU
        run: curl -L https://sourceforge.net/projects/icu/files/ICU4C/4.2.1/icu4c-4_2_1-src.tgz/download > icu.tar.gz
      - name: Install ICU
        run: tar -xzf icu.tar.gz && cd icu/source && ./configure --prefix=$PWD/../build && make install
      - name: Create pkg-config file
        run: |
            perl -MCwd -E'my $pwd = Cwd::getcwd; $, = "\n"; say q<Name: icu>, q<Version: 4.2.1>, q<Description: icu>, qq<Cflags: -I$pwd/icu/build/include>, qq<Libs: -L$pwd/icu/build/lib -licui18n -licuio -licuuc -licudata>' > icu.pc
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop .
      - name: perl Makefile.PL
        run: perl Makefile.PL
        env:
            PKG_CONFIG_PATH: .
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  # CentOS/RHEL 7
  linux-icu-50-2:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.34'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v2
      - run: apt remove -y libicu-dev
      - name: perl -V
        run: perl -V
      - name: Download ICU
        run: curl -L https://github.com/unicode-org/icu/releases/download/release-50-2/icu4c-50_2-src.tgz > icu.tar.gz
      - name: Install ICU
        run: tar -xzf icu.tar.gz && cd icu/source && ./configure --prefix=$PWD/../build && make install
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop .
      - name: perl Makefile.PL
        run: perl Makefile.PL
        env:
            PKG_CONFIG_PATH: icu/build/lib/pkgconfig
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  # CentOS/RHEL 8
  linux-icu-60-3:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.34'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v2
      - run: apt remove -y libicu-dev
      - name: perl -V
        run: perl -V
      - name: Download ICU
        run: curl -L https://github.com/unicode-org/icu/releases/download/release-60-3/icu4c-60_3-src.tgz > icu.tar.gz
      - name: Install ICU
        run: tar -xzf icu.tar.gz && cd icu/source && ./configure --prefix=$PWD/../build && make install
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop .
      - name: perl Makefile.PL
        run: perl Makefile.PL
        env:
            PKG_CONFIG_PATH: icu/build/lib/pkgconfig
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  linux-icu-70-1:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.34'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v2
      - run: apt remove -y libicu-dev
      - name: perl -V
        run: perl -V
      - name: Download ICU
        run: curl -L https://github.com/unicode-org/icu/releases/download/release-70-1/icu4c-70_1-src.tgz > icu.tar.gz
      - name: Install ICU
        run: tar -xzf icu.tar.gz && cd icu/source && ./configure --prefix=$PWD/../build && make install
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-configure --with-develop .
      - name: perl Makefile.PL
        run: perl Makefile.PL
        env:
            PKG_CONFIG_PATH: icu/build/lib/pkgconfig
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

# FreeBSD segfaults due to this bug:
# https://unicode-org.atlassian.net/browse/ICU-21913
#  freebsd:
#    runs-on: macos-10.15
#    steps:
#    - uses: actions/checkout@v2
#    - uses: vmactions/freebsd-vm@v0.1.6
#      with:
#        prepare: pkg install -y p5-ExtUtils-PkgConfig curl icu gcc
#        run: |
#            perl -V
#            curl -L https://cpanmin.us | perl - --notest --installdeps --with-develop --with-configure .
#            perl Makefile.PL
#            make
#            prove -wlvmb t

# Re-enable once this repo goes public.
#  mac:
#    runs-on: macOS-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Perl
#        run: brew install perl
#      - name: perl -V
#        run: perl -V
#      - name: Install Dependencies
#        run: curl -L https://cpanmin.us | perl - --notest --installdeps --with-develop --with-configure .
#      - name: perl Makefile.PL
#        run: perl Makefile.PL
#        env:
#          PKG_CONFIG_PATH: /usr/local/opt/icu4c/lib/pkgconfig
#      - name: make
#        run: make
#      - name: Run tests (with coverage)
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          curl -L https://cpanmin.us | perl - --notest Devel::Cover::Report::Coveralls
#          `perl -MConfig -E'print $Config::Config{"sitebin"}'`/cover -test -report Coveralls
#
#  cygwin:
#    runs-on: windows-latest
#
#    steps:
#      - name: Set up Cygwin
#        uses: egor-tensin/setup-cygwin@v3
#        with:
#            platform: x64
#            packages: perl_base perl-ExtUtils-MakeMaker make gcc-g++ libcrypt-devel libnsl-devel bash libicu-devel
#      - uses: actions/checkout@v2
#      - run: perl -V
#        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
#      - run: cpan App::cpanminus
#        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
#      - name: Install Dependencies
#        run: cd $GITHUB_WORKSPACE; cpanm --verbose --notest --installdeps --with-configure --with-develop .
#        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
#      - name: perl Makefile.PL
#        run: cd $GITHUB_WORKSPACE; perl Makefile.PL
#        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
#      - name: make
#        run: cd $GITHUB_WORKSPACE; make
#        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
#      - name: prove -wlvmb t
#        run: cd $GITHUB_WORKSPACE; make test
#        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'

